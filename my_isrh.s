; Generated by c86 (BYU-NASM) 5.1 (beta) from my_isrh.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
reset_handler:
	jmp	L_my_isrh_1
L_my_isrh_2:
	xor	al, al
	push	ax
	call	exit
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_my_isrh_1:
	push	bp
	mov	bp, sp
	jmp	L_my_isrh_2
	ALIGN	2
L_my_isrh_4:
	DW	0
L_my_isrh_5:
	DB	"TICK ",0
	ALIGN	2
tick_handler:
	jmp	L_my_isrh_6
L_my_isrh_7:
	inc	word [L_my_isrh_4]
	call	printNewLine
	mov	ax, L_my_isrh_5
	push	ax
	call	printString
	add	sp, 2
	push	word [L_my_isrh_4]
	call	printInt
	add	sp, 2
	call	printNewLine
	mov	sp, bp
	pop	bp
	ret
L_my_isrh_6:
	push	bp
	mov	bp, sp
	jmp	L_my_isrh_7
L_my_isrh_12:
	DB	") IGNORED",0
L_my_isrh_11:
	DB	"KEYPRESS (",0
L_my_isrh_10:
	DB	"DELAY COMPLETE",0
L_my_isrh_9:
	DB	"DELAY KEY PRESSED",0
	ALIGN	2
keyboard_handler:
	jmp	L_my_isrh_13
L_my_isrh_14:
	mov	word [bp-2], 0
	cmp	word [KeyBuffer], 100
	jne	L_my_isrh_15
	call	printNewLine
	mov	ax, L_my_isrh_9
	push	ax
	call	printString
	add	sp, 2
	call	printNewLine
	jmp	L_my_isrh_17
L_my_isrh_16:
	inc	word [bp-2]
L_my_isrh_17:
	cmp	word [bp-2], 5000
	jl	L_my_isrh_16
L_my_isrh_18:
	call	printNewLine
	mov	ax, L_my_isrh_10
	push	ax
	call	printString
	add	sp, 2
	call	printNewLine
	jmp	L_my_isrh_19
L_my_isrh_15:
	call	printNewLine
	mov	ax, L_my_isrh_11
	push	ax
	call	printString
	add	sp, 2
	push	word [KeyBuffer]
	call	printChar
	add	sp, 2
	mov	ax, L_my_isrh_12
	push	ax
	call	printString
	add	sp, 2
	call	printNewLine
L_my_isrh_19:
	mov	sp, bp
	pop	bp
	ret
L_my_isrh_13:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_my_isrh_14
